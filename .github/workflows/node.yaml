name: Webpack CI

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js 18.x
        uses: actions/setup-node@v6
        with:
          node-version: 18.x

      - name: Prepare environment
        run: |
          corepack enable
          yarn

      - name: Disable AppArmor
        # https://github.com/puppeteer/puppeteer/pull/13196
        run: echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns

      - name: Test in Chromium
        run: |
          yarn ci
        env:
          CI: true
          HEADLESS: true

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # only run for tags
    if: contains(github.ref, 'refs/tags/')

    needs:
      - test

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Use Node.js 18.x
        uses: actions/setup-node@v6
        with:
          node-version: 18.x
      - name: Prepare environment
        run: |
          corepack enable
          yarn
      - name: Check release is desired
        id: do-publish
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "No Token"
          else

            PUBLISHED_VERSION=$(yarn npm info --json . | jq -c '.version' -r)
            THIS_VERSION=$(node -p "require('./package.json').version")
            # Simple bash helper to comapre version numbers
            verlte() {
              [  "$1" = "`echo -e "$1\n$2" | sort -V | head -n1`" ]
            }
            verlt() {
              [ "$1" = "$2" ] && return 1 || verlte $1 $2
            }
            if verlt $PUBLISHED_VERSION $THIS_VERSION
            then
              echo "Publishing latest"
              echo "tag=latest" >> $GITHUB_OUTPUT
            else
              echo "Publishing hotfix"
              echo "tag=hotfix" >> $GITHUB_OUTPUT
            fi

          fi
      - name: Prepare build
        if: ${{ steps.do-publish.outputs.tag }}
        run: |
          yarn install
          yarn build
        env:
          CI: true
      - name: Publish to NPM
        if: ${{ steps.do-publish.outputs.tag }}
        run: |
          yarn config set npmAuthToken $NPM_AUTH_TOKEN

          NEW_VERSION=$(node -p "require('./package.json').version")
          yarn npm publish --access=public --tag ${{ steps.do-publish.outputs.tag }}

          echo "**Published:** $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          CI: true
      - name: Generate docs
        if: ${{ steps.do-publish.outputs.tag }} == 'latest'
        run: |
          yarn docs
      - name: Publish docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          exclude_assets: '.github,.vscode,node_modules,src,test,.npmrc,.yarnrc'
          publish_dir: ./
